version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  shellcheck: circleci/shellcheck@3.1.1

jobs:
    run-lint:
      docker:
        # Use the same Docker base as the project
        - image: python:3.7.3-stretch
      working_directory: ~/repo

      steps:
        - checkout          
          # Download and cache dependencies
        - restore_cache:
            keys:
            - v1-dependencies-{{ checksum "~/repo/requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

        - run:
            name: install dependencies
            command: |
              python3 -m venv venv
              . venv/bin/activate
              make install
              # Install hadolint
              wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
              chmod +x /bin/hadolint
        - save_cache:
            paths:
              - ./venv
            key: v1-dependencies-{{ checksum "~/repo/requirements.txt" }}

        # run lint!
        - run:
            name: run lint
            command: |
              . venv/bin/activate
              make lint 
    
    build-docker-image:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - setup_remote_docker:
            version: 19.03.13
        - run:
           name: Build Docker Image
           command: |
            chmod +x build_docker.sh
            bash build_docker.sh
    
    push-docker-image-to-docker-hub:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - setup_remote_docker:
            version: 19.03.13
        - run:
            name: Push Docker Image to Docker Hub
            command: |
              chmod +x build_docker.sh
              bash build_docker.sh
              export tag=latest
              docker login -u mryutran -p $DOCKER_PASSWORD
              docker push mryutran/udacity_capstone:$tag

    # Referrence from: https://circleci.com/developer/orbs/orb/circleci/aws-eks
    create-eks-cluster:
      docker:
      - image: 'cimg/python:3.10'
      parameters:
        cluster-name:
          description: |
            Name of the EKS cluster
          type: string
      steps:
        - checkout
        - kubernetes/install:
            kubectl-version: v1.22.0
        - aws-eks/create-cluster:
            cluster-name: << parameters.cluster-name >>
            aws-region: $AWS_DEFAULT_REGION   
            node-type: t2.micro
            ssh-access: true
            ssh-public-key: id_rsa.pub
        - run:
            command: |
              kubectl get services
            name: Test Cluster
      
workflows:
  default:
    jobs:
      # - shellcheck/check
      # - run-lint:
      #     requires:
      #       - "shellcheck/check"
      # - build-docker-image:
          # requires:
          #   - "run-lint"
      # - push-docker-image-to-docker-hub:
      #     requires:
      #       - "build-docker-image"
      - aws-eks/create-cluster:
          cluster-name: udacity_capstone
